<!DOCTYPE html>
<html>
<head>
  <title>Weather App</title>
  <style>
    body {
      background-image: url('https://i.pinimg.com/originals/96/1d/27/961d27ec840890c86fc3cde4824c95cb.jpg');
      background-size: cover;
      font-family: Arial, sans-serif;
      color: #fff;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      position: relative; /* Added for positioning the date and time */
    }

    .container {
      width: 80%;
      max-width: 800px;
      background-color: rgba(0, 0, 0, 0.7);
      padding: 20px;
      border-radius: 10px;
    }

    .header {
      text-align: center;
      font-size: 30px;
      margin-bottom: 20px;
    }

    .search-bar {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 20px;
    }

    .search-bar input[type="text"] {
      width: 200px;
      height: 30px;
      padding: 5px;
      border: none;
      border-radius: 5px 0 0 5px;
      outline: none;
    }

    .search-bar button {
      width: 100px;
      height: 40px;
      background-color: rgb(30, 123, 126);
      color: #fff;
      border: none;
      border-radius: 0 5px 5px 0;
      cursor: pointer;
    }

    .weather-info {
      text-align: center;
    }

    .weather-forecast {
      display: flex;
      justify-content: center;
      flex-wrap: wrap;
      margin-top: 20px;
    }

    .forecast-day {
      text-align: center;
      width: 120px;
      margin-bottom: 20px;
      padding: 10px;
      background-color: rgba(255, 255, 255, 0.1);
      border-radius: 10px;
      margin-right: 10px;
    }

    .forecast-icon {
      width: 50px;
      height: 50px;
      margin: 0 auto 10px;
      display: block;
    }

    .forecast-temp {
      font-size: 18px;
    }

    .error {
      color: #ff0000;
      font-size: 16px;
    }

    /* Styling for date and time */
    #date-time {
      position: absolute;
      top: 20px;
      right: 20px;
      font-size: 18px;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>Weather Forecast</h1>
    </div>
    <div class="search-bar">
      <input type="text" id="city-name" placeholder="Enter city name">
      <button class="search-button" id="search-button">Search</button>
    </div>
    <div class="weather-info" id="weather-info">
      Loading...
    </div>
    <div class="weather-forecast" id="weather-forecast">
      <!-- Weather forecast will be added here -->
    </div>
    <div id="date-time" class="date-time"></div>
  </div>
  <script>
    const searchButton = document.getElementById("search-button");
    const weatherInfo = document.getElementById("weather-info");
    const weatherForecast = document.getElementById("weather-forecast");
    const dateTimeElement = document.getElementById("date-time");

    // Function to update date and time
    function updateDateTime() {
      const currentDate = new Date();
      const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true };
      const formattedDate = currentDate.toLocaleDateString('en-US', options);
      dateTimeElement.textContent = formattedDate;
    }

    // Initial call to update date and time
    updateDateTime();

    // Update date and time every second
    setInterval(updateDateTime, 1000);

    searchButton.addEventListener("click", () => {
      const cityName = document.getElementById("city-name").value;
      if (cityName === "") {
        weatherInfo.innerHTML = "<p class='error'>Please enter a city name.</p>";
        return;
      }
      const xhr = new XMLHttpRequest();
      xhr.open("GET", `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=9920008360e6212a01a59fd9eb579f46`, true);
      xhr.onload = () => {
        if (xhr.status === 200) {
          const data = JSON.parse(xhr.responseText);
          weatherInfo.innerHTML = `
            <h2>${data.name}, ${data.sys.country}</h2>
            <p>${data.weather[0].description}</p>
            <p>Temperature: ${Math.round(data.main.temp - 273.15)}°C / ${Math.round((data.main.temp - 273.15) * 9/5 + 32)}°F</p>
            <p>Humidity: ${data.main.humidity}%</p>
            <p>Wind speed: ${data.wind.speed} m/s</p>
            <p>Air pressure: ${data.main.pressure} hPa</p>
            <p>Visibility: ${data.visibility} m</p>
            <p>Sunrise: ${new Date(data.sys.sunrise * 1000).toLocaleTimeString()}</p>
            <p>Sunset: ${new Date(data.sys.sunset * 1000).toLocaleTimeString()}</p>
          `;
          // Get the forecast data for the week
          const forecastXhr = new XMLHttpRequest();
          forecastXhr.open("GET", `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=9920008360e6212a01a59fd9eb579f46`, true);
          forecastXhr.onload = () => {
            if (forecastXhr.status === 200) {
              const forecastData = JSON.parse(forecastXhr.responseText);
              const forecastElements = forecastData.list.filter((item, index) => index % 8 === 0).map(forecast => {
                const date = new Date(forecast.dt * 1000);
                const dayOfWeek = date.toLocaleDateString('en-US', { weekday: 'long' });
                const temp = Math.round(forecast.main.temp - 273.15);
                const iconCode = forecast.weather[0].icon;
                const iconUrl = `http://openweathermap.org/img/wn/${iconCode}.png`;
                return `
                  <div class="forecast-day">
                    <p>${dayOfWeek}</p>
                    <img class="forecast-icon" src="${iconUrl}" alt="${forecast.weather[0].description}">
                    <p class="forecast-temp">${temp}°C</p>
                  </div>
                `;
              });
              weatherForecast.innerHTML = forecastElements.join('');
            } else {
              weatherForecast.innerHTML = "<p class='error'>An error occurred while fetching the weather forecast. Please try again.</p>";
            }
          };
          forecastXhr.send();
        } else {
          weatherInfo.innerHTML = "<p class='error'>An error occurred. Please try again.</p>";
        }
      };
      xhr.send();
    });
  </script>  
</body>
</html>
